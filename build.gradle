plugins {
    id 'java-library'
    id 'eclipse'  // necessary for workaround below
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sourceSets {
    examples {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    examplesImplementation.extendsFrom implementation
    examplesRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    //////////////////////////////////
    // Public dependencies
    
    // OkHttp 3 - Http client (without Kotlin dependency of version 4)
    api("com.squareup.okhttp3:okhttp:3.14.5")
    
    // Moshi JSON library
    implementation("com.squareup.moshi:moshi:1.9.2")
    implementation("com.squareup.moshi:moshi-adapters:1.9.2")
    
    // SLF4J for logging facade
    implementation("org.slf4j:slf4j-api:1.7.28")
    
    ///////////////////////////////////
    // Test dependencies
    
    // jUnit 5 for Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.1")
    
    testRuntimeOnly('org.apache.logging.log4j:log4j-slf4j-impl:2.12.1')
    
    ///////////////////////////////////
    // Examples dependencies
    
    // use log4j2 logging for examples
    examplesImplementation('org.apache.logging.log4j:log4j-api:2.12.1')
    examplesImplementation('org.apache.logging.log4j:log4j-core:2.12.1')
    examplesImplementation('org.apache.logging.log4j:log4j-slf4j-impl:2.12.1')
    
    // Guava for examples since it makes all Java better and we don't need to worry about
    // conflicting dependencies downstream for examples
    examplesImplementation("com.google.guava:guava:28.2-jre")
    
    // jetty http server for examples that use callbacks 
    examplesImplementation("org.eclipse.jetty:jetty-server:9.4.25.v20191220")
    examplesImplementation("org.eclipse.jetty:jetty-servlet:9.4.25.v20191220")
    
    // freemarker template library for serving basic html in some examples
    examplesImplementation('org.freemarker:freemarker:2.3.29')
    
}

test {
    useJUnitPlatform()
}

task runExample(type: JavaExec) {
    classpath = sourceSets.examples.runtimeClasspath
    main = project.hasProperty("example") ? project.getProperty("example") : "com.nylas.examples.Examples"
}

task createProperties(dependsOn: processResources) {
    doLast {
        mkdir "$buildDir/resources/main"
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

// workaround for https://github.com/eclipse/buildship/issues/476
eclipse {
    classpath {
        plusConfigurations.add configurations.examplesCompileClasspath
    }
}